[{"D:\\coreAPI\\my-app\\src\\index.js":"1","D:\\coreAPI\\my-app\\src\\App.js":"2","D:\\coreAPI\\my-app\\src\\reportWebVitals.js":"3","D:\\coreAPI\\my-app\\src\\Home.js":"4","D:\\coreAPI\\my-app\\src\\Department.js":"5","D:\\coreAPI\\my-app\\src\\Employee.js":"6","D:\\coreAPI\\my-app\\src\\Navigation.js":"7","D:\\coreAPI\\my-app\\src\\AddDepModal.js":"8","D:\\coreAPI\\my-app\\src\\EditDepModal.js":"9","D:\\coreAPI\\my-app\\src\\AddEmpModal.js":"10","D:\\coreAPI\\my-app\\src\\EditEmpModal.js":"11","D:\\TechnicalTest\\FrontEnd\\src\\index.js":"12","D:\\TechnicalTest\\FrontEnd\\src\\reportWebVitals.js":"13","D:\\TechnicalTest\\FrontEnd\\src\\App.js":"14","D:\\TechnicalTest\\FrontEnd\\src\\Home.js":"15","D:\\TechnicalTest\\FrontEnd\\src\\Navigation.js":"16","D:\\TechnicalTest\\FrontEnd\\src\\ProductCategory.js":"17","D:\\TechnicalTest\\FrontEnd\\src\\Product.js":"18","D:\\TechnicalTest\\FrontEnd\\src\\AddCatModal.js":"19","D:\\TechnicalTest\\FrontEnd\\src\\EditCatModal.js":"20","D:\\TechnicalTest\\FrontEnd\\src\\AddProductModal.js":"21","D:\\TechnicalTest\\FrontEnd\\src\\EditProductModal.js":"22"},{"size":500,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":706,"mtime":1611909821701,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":242,"mtime":1611907180867,"results":"27","hashOfConfig":"24"},{"size":3248,"mtime":1611907699260,"results":"28","hashOfConfig":"24"},{"size":3328,"mtime":1611908317908,"results":"29","hashOfConfig":"24"},{"size":927,"mtime":1611906751622,"results":"30","hashOfConfig":"24"},{"size":2111,"mtime":1611910948022,"results":"31","hashOfConfig":"24"},{"size":2576,"mtime":1611908265908,"results":"32","hashOfConfig":"24"},{"size":4379,"mtime":1611911010932,"results":"33","hashOfConfig":"24"},{"size":4985,"mtime":1611908278649,"results":"34","hashOfConfig":"24"},{"size":500,"mtime":1612183185618,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":499162500000,"results":"37","hashOfConfig":"36"},{"size":793,"mtime":1612191095101,"results":"38","hashOfConfig":"36"},{"size":340,"mtime":1612170991742,"results":"39","hashOfConfig":"36"},{"size":1078,"mtime":1612170997733,"results":"40","hashOfConfig":"36"},{"size":4945,"mtime":1612191058962,"results":"41","hashOfConfig":"36"},{"size":6174,"mtime":1612191122374,"results":"42","hashOfConfig":"36"},{"size":3743,"mtime":1612171540469,"results":"43","hashOfConfig":"36"},{"size":4407,"mtime":1612171529999,"results":"44","hashOfConfig":"36"},{"size":5109,"mtime":1612170803931,"results":"45","hashOfConfig":"36"},{"size":5879,"mtime":1612171515530,"results":"46","hashOfConfig":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1vbn8gh",{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"12vhdrg",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"73"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"73"},"D:\\coreAPI\\my-app\\src\\index.js",[],["96","97"],"D:\\coreAPI\\my-app\\src\\App.js",["98"],"import logo from './logo.svg';\nimport './App.css';\n\nimport {Home} from './Home';\nimport {Department} from './Department';\nimport {Employee} from './Employee';\nimport {Navigation} from './Navigation';\n\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"container\">\n     <h3 className=\"m-3 d-flex justify-content-center\">\n       React JS Tutorial\n     </h3>\n\n     <Navigation/>\n\n     <Switch>\n       <Route path='/' component={Home} exact/>\n       <Route path='/department' component={Department}/>\n       <Route path='/employee' component={Employee}/>\n     </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","D:\\coreAPI\\my-app\\src\\reportWebVitals.js",[],"D:\\coreAPI\\my-app\\src\\Home.js",[],"D:\\coreAPI\\my-app\\src\\Department.js",[],"D:\\coreAPI\\my-app\\src\\Employee.js",[],"D:\\coreAPI\\my-app\\src\\Navigation.js",[],"D:\\coreAPI\\my-app\\src\\AddDepModal.js",[],"D:\\coreAPI\\my-app\\src\\EditDepModal.js",[],"D:\\coreAPI\\my-app\\src\\AddEmpModal.js",[],"D:\\coreAPI\\my-app\\src\\EditEmpModal.js",[],"D:\\TechnicalTest\\FrontEnd\\src\\index.js",[],["99","100"],"D:\\TechnicalTest\\FrontEnd\\src\\reportWebVitals.js",[],"D:\\TechnicalTest\\FrontEnd\\src\\App.js",["101","102"],"D:\\TechnicalTest\\FrontEnd\\src\\Home.js",[],"D:\\TechnicalTest\\FrontEnd\\src\\Navigation.js",[],"D:\\TechnicalTest\\FrontEnd\\src\\ProductCategory.js",["103","104"],"D:\\TechnicalTest\\FrontEnd\\src\\Product.js",["105","106","107","108"],"D:\\TechnicalTest\\FrontEnd\\src\\AddCatModal.js",[],"D:\\TechnicalTest\\FrontEnd\\src\\EditCatModal.js",[],"D:\\TechnicalTest\\FrontEnd\\src\\AddProductModal.js",["109"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, Image } from 'react-bootstrap';\r\n\r\nexport class AddProductModal extends Component {\r\n    //Initializing states\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { cats: [] };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    //Setting state values\r\n    componentDidMount() {\r\n        fetch(process.env.REACT_APP_API + 'productcategory')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({ cats: data });\r\n            });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault(); //To prevent page reload\r\n        //Post request for inserting data\r\n        fetch(process.env.REACT_APP_API + 'product', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                ProductName: event.target.ProductName.value,\r\n                Category: event.target.Category.value,\r\n                Cost: event.target.Cost.value,\r\n                ProductDescription: event.target.ProductDescription.value,\r\n                Status: event.target.Status.value\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                alert(result);\r\n            },\r\n                (error) => {\r\n                    alert('Failed');\r\n                })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header clooseButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add Product\r\n                </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={3}>\r\n                            </Col>\r\n                            <Col sm={7}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"ProductName\">\r\n                                        <Form.Label>ProductName</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"ProductName\" required\r\n                                            placeholder=\"ProductName\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"Category\">\r\n                                        <Form.Label>Category</Form.Label>\r\n                                        <Form.Control as=\"select\">\r\n                                            {this.state.cats.map(cat =>\r\n                                                <option key={cat.CategoryId}>{cat.CategoryName}</option>)}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Cost\">\r\n                                        <Form.Label>Cost</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"Cost\" required\r\n                                            placeholder=\"Cost\" />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"ProductDescription\">\r\n                                        <Form.Label>ProductDescription</Form.Label>\r\n                                        <Form.Control as=\"textarea\" name=\"ProductDescription\" required\r\n                                            placeholder=\"ProductDescription\" />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Status\">\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control as=\"select\"   >\r\n                                            <option key=\"Active\">Active</option>\r\n                                            <option key=\"In Active\">In Active</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Button variant=\"primary\" type=\"submit\">\r\n                                            Add Product\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n\r\n                </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","D:\\TechnicalTest\\FrontEnd\\src\\EditProductModal.js",["110"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, Image } from 'react-bootstrap';\r\n\r\nexport class EditProductModal extends Component {\r\n    //Initializing states\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { cats: [] };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    //Setting state values\r\n    componentDidMount() {\r\n        fetch(process.env.REACT_APP_API + 'productcategory')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({ cats: data });\r\n            });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault(); //To prevent page reload\r\n        //Put request for updating data\r\n        fetch(process.env.REACT_APP_API + 'product', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                ProductId: event.target.ProductId.value,\r\n                ProductName: event.target.ProductName.value,\r\n                Category: event.target.Category.value,\r\n                Cost: event.target.Cost.value,\r\n                ProductDescription: event.target.ProductDescription.value,\r\n                Status: event.target.Status.value\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                alert(result);\r\n            },\r\n                (error) => {\r\n                    alert('Failed');\r\n                })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header clooseButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Product\r\n                </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Row>\r\n                            <Col sm={3}>\r\n                            </Col>\r\n                            <Col sm={7}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"ProductId\">\r\n                                        <Form.Label>ProductId</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"ProductId\" required\r\n                                            disabled\r\n                                            defaultValue={this.props.productid} />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"ProductName\">\r\n                                        <Form.Label>ProductName</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"ProductName\" required\r\n                                            defaultValue={this.props.productname}\r\n                                            placeholder=\"ProductName\" />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Category\">\r\n                                        <Form.Label>Category</Form.Label>\r\n                                        <Form.Control as=\"select\" defaultValue={this.props.cat} >\r\n                                            {this.state.cats.map(cat =>\r\n                                                <option key={cat.CategoryId}>{cat.CategoryName}</option>)}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Cost\">\r\n                                        <Form.Label>Cost</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"Cost\" required\r\n                                            defaultValue={this.props.cost}\r\n                                            placeholder=\"Cost\" />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"ProductDescription\">\r\n                                        <Form.Label>ProductDescription</Form.Label>\r\n                                        <Form.Control as=\"textarea\" name=\"ProductDescription\" required\r\n                                            defaultValue={this.props.des}\r\n                                            placeholder=\"ProductDescription\" />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"Status\">\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control as=\"select\" defaultValue={this.props.sts}  >\r\n                                            <option key=\"Active\">Active</option>\r\n                                            <option key=\"In Active\">In Active</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Button variant=\"primary\" type=\"submit\">\r\n                                            Update Product\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}",{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":12},{"ruleId":"111","replacedBy":"119"},{"ruleId":"113","replacedBy":"120"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":12},{"ruleId":"121","severity":1,"message":"122","line":18,"column":23,"nodeType":"123","endLine":20,"endColumn":9},{"ruleId":"124","severity":1,"message":"125","line":73,"column":44,"nodeType":"126","messageId":"127","endLine":73,"endColumn":46},{"ruleId":"128","severity":1,"message":"129","line":74,"column":40,"nodeType":"130","messageId":"131","endLine":74,"endColumn":42},{"ruleId":"124","severity":1,"message":"125","line":67,"column":55,"nodeType":"126","messageId":"127","endLine":67,"endColumn":57},{"ruleId":"128","severity":1,"message":"129","line":68,"column":32,"nodeType":"130","messageId":"131","endLine":68,"endColumn":34},{"ruleId":"124","severity":1,"message":"125","line":90,"column":56,"nodeType":"126","messageId":"127","endLine":90,"endColumn":58},{"ruleId":"128","severity":1,"message":"129","line":91,"column":47,"nodeType":"130","messageId":"131","endLine":91,"endColumn":49},{"ruleId":"115","severity":1,"message":"132","line":2,"column":41,"nodeType":"117","messageId":"118","endLine":2,"endColumn":46},{"ruleId":"115","severity":1,"message":"132","line":2,"column":41,"nodeType":"117","messageId":"118","endLine":2,"endColumn":46},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["133"],["134"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Image' is defined but never used.","no-global-assign","no-unsafe-negation"]